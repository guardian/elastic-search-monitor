AWSTemplateFormatVersion: 2010-09-09
Description: Monitors your elastic search metrics and sends email if something's wrong
Parameters:
  Stack:
    Description: Stack name
    Type: String
    Default: deploy
  App:
    Description: Application name
    Type: String
    Default: elastic-search-monitor-alarms
  Stage:
    Description: Stage name
    Type: String
    AllowedValues:
      - CODE
      - PROD
    Default: CODE
  AlertEmail:
    Description: The email to send notifications to
    Type: String
  ClusterName:
    Description: The Elastic Search cluster name
    Type: String
    Default: elk
Resources:
  AlertChannel:
    Type: AWS::SNS::Topic
    Properties:
      DisplayName: !Sub Elastic search alert channel for ${Stage}
      Subscription:
      - Endpoint: !Ref AlertEmail
        Protocol: email
      TopicName: !Sub Elastic-Search-Alerts-${Stage}

  DataNodeCountAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmActions:
      - !Ref AlertChannel
      AlarmDescription: !Sub Unexpected count of data nodes in ${Stage}
      ComparisonOperator: LessThanThreshold
      Dimensions:
      - Name: Cluster
        Value: !Ref ClusterName
      EvaluationPeriods: 2
      MetricName: NumberOfDataNodes
      Namespace: !Sub ${Stack}/${ClusterName}
      Period: 60
      Statistic: Minimum
      Threshold: 3

  MasterNodeCountAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmActions:
      - !Ref AlertChannel
      AlarmDescription: !Sub Unexpected count of master nodes in ${Stage}
      ComparisonOperator: LessThanThreshold
      Dimensions:
      - Name: Cluster
        Value: !Ref ClusterName
      EvaluationPeriods: 2
      MetricName: NumberOfRespondingMastersNodes
      Namespace: !Sub ${Stack}/${ClusterName}
      Period: 60
      Statistic: Minimum
      Threshold: 3

  ClusterStatusAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmActions:
      - !Ref AlertChannel
      AlarmDescription: !Sub Unexpected cluster status in ${Stage}
      ComparisonOperator: GreaterThanThreshold
      Dimensions:
      - Name: Cluster
        Value: !Ref ClusterName
      EvaluationPeriods: 15
      MetricName: Status
      Namespace: !Sub ${Stack}/${ClusterName}
      Period: 60
      Statistic: Maximum
      # Green = 0, Yellow = 1, Red = 2
      Threshold: 0

  RedClusterStatusAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmActions:
        - !Ref AlertChannel
      AlarmDescription: !Sub Red cluster status in ${Stage}
      ComparisonOperator: GreaterThanThreshold
      Dimensions:
        - Name: Cluster
          Value: !Ref ClusterName
      EvaluationPeriods: 1
      MetricName: Status
      Namespace: !Sub ${Stack}/${ClusterName}
      Period: 60
      Statistic: Maximum
      # Green = 0, Yellow = 1, Red = 2
      Threshold: 1

  DataNodeJvmHeapUsageAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmActions:
      - !Ref AlertChannel
      AlarmDescription: !Sub A data node is using too much of its heap in ${Stage}
      ComparisonOperator: GreaterThanThreshold
      Dimensions:
      - Name: Cluster
        Value: !Ref ClusterName
      EvaluationPeriods: 2
      MetricName: MaxJvmHeapUsage
      Namespace: !Sub ${Stack}/${ClusterName}
      Period: 60
      Statistic: Maximum
      Threshold: 85

  DataNodeLowStorageAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmActions:
      - !Ref AlertChannel
      AlarmDescription: !Sub A data node is running low on storage space in ${Stage}
      ComparisonOperator: LessThanThreshold
      Dimensions:
      - Name: Cluster
        Value: !Ref ClusterName
      EvaluationPeriods: 2
      MetricName: MinFreeDiskSpace
      Namespace: !Sub ${Stack}/${ClusterName}
      Period: 60
      Statistic: Minimum
      Threshold: 500000000000
