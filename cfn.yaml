AWSTemplateFormatVersion: 2010-09-09
Description: Monitors your elastic search cluster and reports metrics to cloudwatch
Parameters:
  Stack:
    Description: Stack name
    Type: String
    Default: deploy
  App:
    Description: Application name
    Type: String
    Default: elastic-search-monitor
  Stage:
    Description: Stage name
    Type: String
    AllowedValues:
      - CODE
      - PROD
    Default: CODE
  TagQueryApp:
    Description: Application name of the cluster master node
    Type: String
  TagQueryStack:
    Description: Stack name of the cluster master node
    Type: String
  ClusterName:
    Description: Cluster name to use in the cloudwatch metrics
    Type: String
  DeployBucket:
    Description: Bucket where RiffRaff uploads artifacts on deploy
    Type: String
    Default: deploy-tools-dist
  VpcId:
    Description: Vpc id (same VPC as your ELK stack)
    Type: AWS::EC2::VPC::Id
  Subnets:
    Description: Subnets (within your VPC)
    Type: List<AWS::EC2::Subnet::Id>
Resources:
  LambdaSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Open access to elk cluster
      VpcId:
        Ref: VpcId
  ExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action: sts:AssumeRole
      Path: /
      Policies:
        - PolicyName: logs
          PolicyDocument:
            Statement:
              Effect: Allow
              Action:
                - logs:CreateLogGroup
                - logs:CreateLogStream
                - logs:PutLogEvents
              Resource: arn:aws:logs:*:*:*
        - PolicyName: lambda
          PolicyDocument:
            Statement:
              Effect: Allow
              Action:
                - lambda:InvokeFunction
              Resource: "*"
        - PolicyName: vpc
          PolicyDocument:
            Statement:
              Effect: Allow
              Action:
                - ec2:CreateNetworkInterface
                - ec2:DescribeNetworkInterfaces
                - ec2:DeleteNetworkInterface
              Resource: "*"
        - PolicyName: ec2-detection
          PolicyDocument:
            Statement:
              Effect: Allow
              Action:
                - ec2:DescribeInstances
              Resource: "*"
        - PolicyName: cloudwatch
          PolicyDocument:
            Statement:
              Effect: Allow
              Action:
                - cloudwatch:PutMetricData
              Resource: "*"
  Lambda:
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: !Sub ${App}-${Stage}
      Code:
        S3Bucket:
          Ref: DeployBucket
        S3Key: !Sub ${Stack}/${Stage}/${App}/${App}.jar
      Environment:
        Variables:
          Stage: !Ref Stage
          Stack: !Ref Stack
          App: !Ref App
          TagQueryApp: !Ref TagQueryApp
          TagQueryStack: !Ref TagQueryStack
          ClusterName: !Ref ClusterName
      Description: Monitors your elastic search cluster and reports metrics to cloudwatch
      Handler: com.gu.elasticsearchmonitor.Lambda::handler
      MemorySize: 256
      Role: !GetAtt ExecutionRole.Arn
      Runtime: java8
      Timeout: 60
      VpcConfig:
        SubnetIds: !Ref Subnets
        SecurityGroupIds: [!GetAtt LambdaSecurityGroup.GroupId]

  DailyEvent:
    Type: AWS::Events::Rule
    Properties:
      Description: Event sent to process the previous day of data
      ScheduleExpression: rate(1 minute)
      Targets:
        - Id: Lambda
          Arn: !GetAtt Lambda.Arn

  DailyEventLambdaPermission:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName: !GetAtt Lambda.Arn
      Principal: events.amazonaws.com
      SourceArn: !GetAtt DailyEvent.Arn